name: Build and Publish to PyPI

on:
  push:
    tags:
      - "*-python"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        goarch: [amd64]
        include:
          - os: ubuntu-latest
            goos: linux
            ext: so
            cc: gcc
          - os: macos-latest
            goos: darwin
            ext: dylib
            cc: clang
          - os: windows-latest
            goos: windows
            ext: dll
            cc: x86_64-w64-mingw32-gcc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # Specify the Go version you need

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build shared library
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CC: ${{ matrix.cc }}
        run: |
          cd python
          python setup.py build_py --goos=${{ matrix.goos }} --goarch=${{ matrix.goarch }} --cc=${{ matrix.cc }}

      - name: Build wheel
        run: |
          cd python
          python setup.py bdist_wheel

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: seperno-${{ matrix.goos }}-${{ matrix.goarch }}
          path: python/dist/

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: python/dist/
          name: seperno
          pattern: seperno-*
          merge-multiple: true

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          twine upload python/dist/*