name: Build and Publish to PyPI

on:
  push:
    tags:
      - "*-python"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build Go shared library
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            go build -o your_package_name/libyourlibrary.so -buildmode=c-shared your_package_name/main.go
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            go build -o your_package_name/libyourlibrary.dylib -buildmode=c-shared your_package_name/main.go
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build Python package
        run: |
          cd python
          python setup.py sdist bdist_wheel

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: dist

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: python/dist
          name: dist
          pattern: dist-*
          merge-multiple: true

      - name: Combine artifacts
        run: |
          mkdir -p combined_dist
          cp -r dist-ubuntu-latest/* combined_dist/
          cp -r dist-macos-latest/* combined_dist/

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          twine upload combined_dist/*